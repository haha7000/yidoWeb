Document Type Identification!
	‚Ä¢	Determine whether each image contains a receipt, a passport, or other types of documents.
	‚Ä¢	If the image is not a receipt or passport, ignore it and do not include it in the output.



RECEIPT_PROMPT = """
        You are given OCR results from receipt images issued by either LOTTE or SHILLA duty-free shops.

    Your task is to extract only the specified fields into a clean JSON format.  
    **Do not include any keys other than the ones listed below.**  
    If any information is not detected, return an empty string `""`.

    If an image contains multiple receipts, extract each one as a separate JSON object.

    ---

    ## ‚úÖ Required Output Keys:

    ### 1. `"receiptNumber"`  
    The official receipt number. Extract only numeric characters (no hyphens, no spaces).  
    The format differs depending on the brand:

    #### üìç SHILLA
    - Must be exactly **13 digits**.
    - Often located below the barcode or after the prefix `NO.`.
    - Example:
      - From barcode: `*0124507700631*` ‚Üí `"0124507700631"`
      - From printed number: `NO. 01-245-077-0063-1` ‚Üí merge segments ‚Üí `"0124507700631"`
    - If the number is not exactly 13 digits after cleaning, return `""`.

    #### üìç LOTTE
    - Must be exactly **14 digits**.
    - Appears below `www.lottedfs.com` or `kr.lottedfs.com` and above `SaleDT` or `SysDT`.
    - Often in the format `902087-24-000593` ‚Üí remove hyphens ‚Üí `"90208724000593"`
    - If the number is not exactly 14 digits after cleaning, return `""`.

    ---

    ### 2. `"dutyFreeShop"`  
    The brand of the duty-free shop. Determine based on the text in the OCR result:

    #### üìç SHILLA
    - If the OCR contains `"THE SHILLA"` or `"Shilla Duty Free"`, return `"SHILLA"`.
    - If a group number starts with `G:`, also infer `"SHILLA"`.

    #### üìç LOTTE
    - If the OCR contains `"LOTTE"`, `"www.lottedfs.com"` or `"kr.lottedfs.com"`, return `"LOTTE"`.
    - If a group number starts with `Group:`, also infer `"LOTTE"`.

    - If no recognizable indicators are found, return an empty string `""`.

    ---

    ## üßæ Output Format Examples:
    ```json
    {
      "receiptNumber": "90208724000593",
      "dutyFreeShop": "LOTTE"
    }
    {
      "receiptNumber": "0124507700631",
      "dutyFreeShop": "SHILLA"
    }
    """


PASSPORT_PRMPT = """
    Please convert the passport OCR results into the JSON format below, including only the specified keys. 
    Do not include any other keys besides the ones mentioned.

    The conditions for each field are as follows:

    - "name": Ignore Chinese characters and extract only the name in uppercase English letters. 
      For Chinese passports, the surname (family name) should come first, followed by the given name, 
      separated by a space. If the order is reversed, rearrange it correctly so that the surname is first. 
      The name should consist of at least two words. 
      If no English name is detected, enter an empty string. 
      Example: "ZHANG SAN"

    - "passportNumber": The passport number is a total of **9 characters**, with the first **1-2 characters** 
      being uppercase English letters, and the rest being numbers. 
      **If a lowercase 'l' or uppercase 'I' is detected, it should be considered as the digit '1'.** 
      If it doesn't meet this format, enter an empty string.

    - "birthDay": Extract the birth date from the OCR and format it as "DD MMM YYYY" (e.g., "09 Jun 1994"), where:
        - DD: Two-digit day (01-31)
        - MMM: Three-letter English month abbreviation with the first letter uppercase and the rest lowercase 
          (e.g., Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec)
        - YYYY: Four-digit year
      If no birth date is detected or the format cannot be met, enter an empty string.

    - For any information that cannot be detected, enter an empty string.

    Only the following keys should be present in the output:
    {
        "name": "ZHANG SAN",
        "passportNumber": "AS1234567",
        "birthDay": "09 Jun 1994"
    }
    """


MIXED_DOC_PROMPT = """
You will be given OCR results extracted from one or more images.  
Each image may contain **a receipt**, a **passport**, or **both at the same time**.

Your task is to:
1. Identify whether each document is a **receipt**, a **passport**, or both.
2. Extract information into the following JSON format **based on document type**.
3. For any information that is not present or cannot be identified, use an empty string (`""`).
4. If multiple receipts or multiple passports are present, extract **all of them**.

---

üìÑ For **receipts**, extract:
- `"receiptNumber"`: 
    - **LOTTE**: 14-digit number (e.g. `90208724000593`)  
      - OCR may show as `902087-24-000593` ‚Üí remove hyphens
      - Appears below `www.lottedfs.com` or `kr.lottedfs.com` and above `SaleDT` or `SysDT`
    - **SHILLA**: 13-digit number
    - If none found, return empty list.

üìÑ For **passports**, extract:
- `"name"`: Uppercase English only (no Chinese), at least 2 words  
  - Surname first (ex: "ZHANG SAN")
- `"passportNumber"`: 9 characters, 1‚Äì2 uppercase letters + numbers  
  - Treat lowercase `l` or uppercase `I` as number `1`

---

üßæ Final output format:

{
  "receipts": [
    {"receiptNumber": "90208724000593"},
    {"receiptNumber": "92208724004591"}
  ],
  "passports": [
    {
      "name": "ZHANG SAN",
      "passportNumber": "AS1234567",
      "birthDay": "09 Jun 1994"
    }
  ]
}



