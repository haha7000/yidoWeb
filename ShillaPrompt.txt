Document Type Identification!
	â€¢	Determine whether each image contains a receipt, a passport, or other types of documents.
	â€¢	If the image is not a receipt or passport, ignore it and do not include it in the output.



RECEIPT_PROMPT = """
    Please convert the SHILLA duty-free receipt OCR results into the JSON format below.  
    Include **only** the specified keys, and do not include any keys other than those mentioned.

    ---

    The conditions for each field are as follows:

    - "receiptNumber": The receipt number consists of numbers only and must be exactly **13 digits**.  
    It is typically located below a barcode or near labels such as "NO." or "Receipt No.".  
    The number may appear in a segmented format like `01-245-077-0063-1`, which should be cleaned and joined into `0124507700631`.  
    If the cleaned result is not exactly 13 digits, return an empty string `""`.

    - "passportNumber": The passport number must be **exactly 9 characters** long.  
    It should begin with **1â€“2 uppercase English letters**, followed by **numbers**.  
    If the OCR mistakenly detects a lowercase "l" or uppercase "I", interpret it as the digit **1**.  
    If the format is invalid or cannot be found, return an empty string `""`.

    ---

    Note:
    - A single image may contain multiple receipts, and each may include a separate passport number.
    - Please extract all valid entries from the image.

    ---

    Output format:
    [
    {
        "receiptNumber": "0124507700631",
        "passportNumber": "MZ9268755"
    },
    {
        "receiptNumber": "0124507700684",
        "passportNumber": ""
    }
    ]
    """


PASSPORT_PRMPT = """
    Please convert the passport OCR results into the JSON format below, including only the specified keys. 
    Do not include any other keys besides the ones mentioned.

    The conditions for each field are as follows:

    - "name": Ignore Chinese characters and extract only the name in uppercase English letters. 
      For Chinese passports, the surname (family name) should come first, followed by the given name, 
      separated by a space. If the order is reversed, rearrange it correctly so that the surname is first. 
      The name should consist of at least two words. 
      If no English name is detected, enter an empty string. 
      Example: "ZHANG SAN"

    - "passportNumber": The passport number is a total of **9 characters**, with the first **1-2 characters** 
      being uppercase English letters, and the rest being numbers. 
      **If a lowercase 'l' or uppercase 'I' is detected, it should be considered as the digit '1'.** 
      If it doesn't meet this format, enter an empty string.

    - "birthDay": Extract the birth date from the OCR and format it as "DD MMM YYYY" (e.g., "09 Jun 1994"), where:
        - DD: Two-digit day (01-31)
        - MMM: Three-letter English month abbreviation with the first letter uppercase and the rest lowercase 
          (e.g., Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec)
        - YYYY: Four-digit year
      If no birth date is detected or the format cannot be met, enter an empty string.

    - For any information that cannot be detected, enter an empty string.

    Only the following keys should be present in the output:
    {
        "name": "ZHANG SAN",
        "passportNumber": "AS1234567",
        "birthDay": "09 Jun 1994"
    }
    """


MIXED_DOC_PROMPT = """
You will be given OCR results extracted from one or more images.  
Each image may contain **a receipt**, a **passport**, or **both at the same time**.

Your task is to:
1. Identify whether each document is a **receipt**, a **passport**, or both.
2. Extract information into the following JSON format **based on document type**.
3. For any information that is not present or cannot be identified, use an empty string (`""`).
4. If multiple receipts or multiple passports are present, extract **all of them**.

---

ðŸ“„ For **receipts**, extract:
- `"receiptNumber"`: 
    - **LOTTE**: 14-digit number (e.g. `90208724000593`)  
      - OCR may show as `902087-24-000593` â†’ remove hyphens
      - Appears below `www.lottedfs.com` or `kr.lottedfs.com` and above `SaleDT` or `SysDT`
    - **SHILLA**: 13-digit number
    - If none found, return empty list.

ðŸ“„ For **passports**, extract:
- `"name"`: Uppercase English only (no Chinese), at least 2 words  
  - Surname first (ex: "ZHANG SAN")
- `"passportNumber"`: 9 characters, 1â€“2 uppercase letters + numbers  
  - Treat lowercase `l` or uppercase `I` as number `1`

---

ðŸ§¾ Final output format:

{
  "receipts": [
    {"receiptNumber": "90208724000593"},
    {"receiptNumber": "92208724004591"}
  ],
  "passports": [
    {
      "name": "ZHANG SAN",
      "passportNumber": "AS1234567",
      "birthDay": "09 Jun 1994"
    }
  ]
}



